# This is a basic workflow to help you get started with Actions

name: Bounty CI

on: issue_comment

jobs:
  commented_set:
    name: Add a bounty
    if: ${{ startsWith(github.event.comment.body, '/add_bounty') }}
    runs-on: ubuntu-latest
    container: 
      image: paravirtualtishu/mxpy:latest
      env:
        GITHUB_USER: ${{ github.event.comment.user.login }}
        GITHUB_ISSUE_ID: ${{ github.event.issue.id }}

    steps:
      - name: Check comment is "/add_bounty bounty"
        uses: actions-ecosystem/action-regex-match@v2.0.2
        id: exact_match
        with:
          text: ${{ github.event.comment.body }}
          regex: '^\/add_bounty (\d+)$'
      
      - name: Uppercase username
        shell: bash
        run: |
          echo "$GITHUB_PEM_SECRET_KEY"
          echo "GITHUB_PEM_SECRET_KEY=${GITHUB_USER^^}_PEM_SECRET" >>${GITHUB_ENV}

      - name: Add bounty
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_ISSUE_BOUNTY: ${{ steps.exact_match.outputs.group1 }}
        if: ${{ steps.exact_match.outputs.match != '' }}
        run: |
          echo "The bounty: $GITHUB_ISSUE_BOUNTY"
          echo "${{ secrets[env.GITHUB_PEM_SECRET_KEY] }}" > key.pem
          issue_id_hex=$(echo -n $GITHUB_ISSUE_ID | od -A n -t x1 | sed 's/ *//g' | tr -d '\n')

          echo $issue_id_hex

          mxpy --verbose contract call erd1qqqqqqqqqqqqqpgqmajgt3zq6mp8g8yewqvpqst4pjhm84j3uyhqxpf7z9 \
            --pem key.pem \
            --gas-limit=10000000 \
            --function="add_bounty" \
            --chain D \
            --proxy="https://devnet-gateway.multiversx.com" \
            --value "$GITHUB_ISSUE_BOUNTY"000000000000000000 \
            --recall-nonce \
            --send \
            --arguments 0x"$issue_id_hex"

  commented_grant:
    name: Grant the bounty
    if: ${{ startsWith(github.event.comment.body, '/grant_bounty') }}
    runs-on: ubuntu-latest
    container: 
      image: paravirtualtishu/mxpy:latest
      env:
        GITHUB_USER: ${{ github.event.comment.user.login }}
        GITHUB_ISSUE_ID: ${{ github.event.issue.id }}

    steps:
      - name: Check comment is "/grant_bounty @github_username"
        uses: actions-ecosystem/action-regex-match@v2.0.2
        id: exact_match
        with:
          text: ${{ github.event.comment.body }}
          regex: '^\/grant_bounty @(\w+)$'

      - name: Uppercase username
        shell: bash
        run: |
          echo "$GITHUB_PEM_SECRET_KEY"
          echo "GITHUB_PEM_SECRET_KEY=${GITHUB_USER^^}_PEM_SECRET" >>${GITHUB_ENV}

      - name: Grant bounty
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_HUNTER: ${{ steps.exact_match.outputs.group1 }}
        if: ${{ steps.exact_match.outputs.match != '' && github.event.comment.user.login == github.event.issue.user.login }}
        run: |
          echo "${{ secrets[env.GITHUB_PEM_SECRET_KEY] }}" > key.pem
          issue_id_hex=$(echo -n $GITHUB_ISSUE_ID | od -A n -t x1 | sed 's/ *//g' | tr -d '\n')
          user_hex=$(echo -n $GITHUB_HUNTER | od -A n -t x1 | sed 's/ *//g' | tr -d '\n')

          mxpy --verbose contract call erd1qqqqqqqqqqqqqpgqmajgt3zq6mp8g8yewqvpqst4pjhm84j3uyhqxpf7z9 \
            --pem key.pem \
            --gas-limit=10000000 \
            --function="grant_bounty" \
            --chain D \
            --proxy="https://devnet-gateway.multiversx.com" \
            --recall-nonce \
            --send \
            --arguments 0x"$user_hex" 0x"$issue_id_hex"

  claim_fund:
    name: Withdraw your fund
    if: ${{ startsWith(github.event.comment.body, '/withdraw_bounty') }}
    runs-on: ubuntu-latest
    container:
      image: paravirtualtishu/mxpy:latest
      env:
        GITHUB_USER: ${{ github.event.comment.user.login }}
        GITHUB_ISSUE_ID: ${{ github.event.issue.id }}

    steps:
      - name: Check comment is "/withdraw_bounty"
        uses: actions-ecosystem/action-regex-match@v2.0.2
        id: exact_match
        with:
          text: ${{ github.event.comment.body }}
          regex: '^\/withdraw_bounty$'

      - name: Uppercase username
        shell: bash
        run: |
          echo "$GITHUB_PEM_SECRET_KEY"
          echo "GITHUB_PEM_SECRET_KEY=${GITHUB_USER^^}_PEM_SECRET" >>${GITHUB_ENV}

      - name: Claim bounty fund back
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        if: ${{ steps.exact_match.outputs.match != '' }}
        run: |
          echo "${{ secrets[env.GITHUB_PEM_SECRET_KEY] }}" > key.pem
          issue_id_hex=$(echo -n $GITHUB_ISSUE_ID | od -A n -t x1 | sed 's/ *//g' | tr -d '\n')

          mxpy --verbose contract call erd1qqqqqqqqqqqqqpgqmajgt3zq6mp8g8yewqvpqst4pjhm84j3uyhqxpf7z9 \
            --pem key.pem \
            --gas-limit=10000000 \
            --function="withdraw_bounty" \
            --chain D \
            --proxy="https://devnet-gateway.multiversx.com" \
            --recall-nonce \
            --send \
            --arguments 0x"$issue_id_hex"